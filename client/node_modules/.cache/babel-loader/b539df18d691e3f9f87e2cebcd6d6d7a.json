{"ast":null,"code":"var _jsxFileName = \"/home/patel2dc/Projects/chatApp/client/src/components/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport InfoBar from '../components/InfoBar/InfoBar';\nimport Input from '../components/Input/Input';\nimport Messages from '../components/Messages/Messages';\nimport users from '../../../../server/users';\nimport TextContainer from '../components/TextContainer/TextContainer';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = \"localhost:5000\";\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    if (message) {\n      event.preventDefault();\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    room: room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TextContainer, {\n    users: users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/patel2dc/Projects/chatApp/client/src/components/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","Messages","users","TextContainer","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","off","on","sendMessage","event","preventDefault"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport InfoBar from '../components/InfoBar/InfoBar';\nimport Input from '../components/Input/Input';\nimport Messages from '../components/Messages/Messages';\nimport users from '../../../../server/users';\nimport TextContainer from '../components/TextContainer/TextContainer';\n\n\n\nlet socket;\n\nconst Chat=({location})=>{\n    const [name, setName] = useState(\"\");\n    const [room, setRoom] = useState(\"\");\n    const [message, setMessage]= useState('');\n    const [messages, setMessages]= useState([]);\n    const ENDPOINT = \"localhost:5000\";\n\n    useEffect(()=>{\n        const {name,room} = queryString.parse(location.search);\n\n        socket = io(ENDPOINT);\n        setName(name);\n        setRoom(room);\n\n        socket.emit('join',{name,room});\n        \n        return () => {\n            socket.emit('disconnect');\n\n            socket.off();\n        }\n\n    },[ENDPOINT,location.search]);\n\n    useEffect(()=>{\n        socket.on('message', (message)=>{\n            setMessages([...messages,message]);\n        })\n    },[messages]);\n\n    const sendMessage= (event)=>{\n\n        if(message){\n            event.preventDefault();\n            socket.emit('sendMessage', message, ()=> setMessage(''));\n        }\n    }\n\n    return(\n        <div className=\"outerContainer\">\n            <div className=\"container\">\n                <InfoBar room={room}/>\n                <Messages messages={messages}/>\n                <Input message={message} setMessage={setMessage}  sendMessage={sendMessage}/>\n            </div>\n            <TextContainer users={users}></TextContainer>\n        </div>\n        )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}